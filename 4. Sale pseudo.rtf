FUNCTION Sale
Start
BOLEAN exit = false
WHILE exit = false
	TEXT currentSaleList = “”, customerID =“”
	BOLEAN pay = false,  paid = false
	NUMBER amountDue = 0, amountReceived = 0, amountChange = 0
		WHILE pay = false 
			IF select pay then pay = true 
			PROMPT: "Please scan an item" and input from scanner: itemID
			currentSaleList = currentSaleList(currentSaleList() + itemID)
		END WHILE
	amountDue = sum (select stockRecords.price from stockRecords where stockRecords.itemID = currentSaleList)
	IF sum (select all from customerRecords where customerRecords.customerID = customerID)  = 1 #checking whether customerID is in customerRecords.customerID to determine if it is a loyalty card holder)
		THEN amountDue = amountDue * 95% #Loyalty cardholders get 5% off every purchase)
	END IF
	WHILE paid = false
		PROMPT: "Enter amount received"
		INPUT = amountReceived
		Open register
		IF amountReceived > amountDue
			THEN amountChange = amountReceived - amountDue
			PROMPT: "The change is: " + amountReceived + ”N$”
			paid = true
		ELSE IF amountReceived = amountDue
			then amountChange = 0
			PROMPT: "The change is: " + amountChange + “N$”
			paid = true
		ELSE IF amountReceived < amountDue
			THEN amountChange = -(amountReceived - amountDue)
			PROMPT: “Error there is still “ + amountChange + “N$ due”
			amountDue = -(amountReceived - amountDue)
		END IF
	END WHILE
	NUMBER itemCount = sum (currentSaleList), count = 0
	WHILE count  <= itemCount
		count = count + 1 
		update stockRecords set stockRecords.amountInStock = stockRecords.amountInStock -1 where stockRecords.itemID = currentSaleList(count)
	END WHILE
	Print currentSaleList + amountDue
	IF till not closed 
	THEN prompt: "Please close the till"
	IF select exit
	THEN exit = true
END WHILE
START FUNCTION Main Menu
END
END FUNCTION
